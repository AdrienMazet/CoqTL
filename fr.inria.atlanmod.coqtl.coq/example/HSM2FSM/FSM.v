
(********************************************************************
	@name Coq declarations for metamodel: <FSM>
	@date 2018/07/12 13:26:36
	@description Automatically generated by Ecore2Coq transformation.
 ********************************************************************)

(* Coq libraries *)
Require Import Bool.
Require Import String.
Require Import List.
Require Import Multiset.
Require Import ListSet.
Require Import Omega.
Require Import Coq.Logic.Eqdep_dec.

(* CoqTL libraries *)
Require Import core.utils.tTop.
Require Import core.Metamodel.
Require Import core.Model.

(* Base types *)
Inductive FStateMachine : Set :=
  BuildFStateMachine :
  (* name *) string ->
  FStateMachine.
  
Inductive FTransition : Set :=
  BuildFTransition :
  (* label *) string ->
  FTransition.
  
Inductive FAbstractState : Set :=
  BuildFAbstractState :
  (* name *) string ->
  FAbstractState.
  
Inductive FInitialState : Set :=
  BuildFInitialState :
  (* name *) string ->
  FInitialState.
  
Inductive FRegularState : Set :=
  BuildFRegularState :
  (* name *) string ->
  FRegularState.
  

Inductive FStateMachineTransitions : Set :=
   BuildFStateMachineTransitions :
   FStateMachine ->
   list FTransition ->
   FStateMachineTransitions.
Inductive FStateMachineStates : Set :=
   BuildFStateMachineStates :
   FStateMachine ->
   list FAbstractState ->
   FStateMachineStates.

Inductive FTransitionStateMachine : Set :=
   BuildFTransitionStateMachine :
   FTransition ->
   FStateMachine ->
   FTransitionStateMachine.
Inductive FTransitionSource : Set :=
   BuildFTransitionSource :
   FTransition ->
   FAbstractState ->
   FTransitionSource.
Inductive FTransitionTarget : Set :=
   BuildFTransitionTarget :
   FTransition ->
   FAbstractState ->
   FTransitionTarget.

Inductive FAbstractStateStateMachine : Set :=
   BuildFAbstractStateStateMachine :
   FAbstractState ->
   FStateMachine ->
   FAbstractStateStateMachine.

Inductive FInitialStateStateMachine : Set :=
   BuildFInitialStateStateMachine :
   FInitialState ->
   FStateMachine ->
   FInitialStateStateMachine.

Inductive FRegularStateStateMachine : Set :=
   BuildFRegularStateStateMachine :
   FRegularState ->
   FStateMachine ->
   FRegularStateStateMachine.


(* Accessors *)
Definition getFStateMachineName (f : FStateMachine) : string :=
  match f with BuildFStateMachine name  => name end.



Definition getFTransitionLabel (f : FTransition) : string :=
  match f with BuildFTransition label  => label end.



Definition getFAbstractStateName (f : FAbstractState) : string :=
  match f with BuildFAbstractState name  => name end.



Definition getFInitialStateName (f : FInitialState) : string :=
  match f with BuildFInitialState name  => name end.



Definition getFRegularStateName (f : FRegularState) : string :=
  match f with BuildFRegularState name  => name end.




(* Equality for Types *)
(**? We define eq for Eclass on their fist attribute **)
Definition beq_FStateMachine (fs_arg1 : FStateMachine) (fs_arg2 : FStateMachine) : bool :=
  beq_string (getFStateMachineName fs_arg1) (getFStateMachineName fs_arg2).

Definition beq_FTransition (ft_arg1 : FTransition) (ft_arg2 : FTransition) : bool :=
  beq_string (getFTransitionLabel ft_arg1) (getFTransitionLabel ft_arg2).

Definition beq_FAbstractState (fa_arg1 : FAbstractState) (fa_arg2 : FAbstractState) : bool :=
  beq_string (getFAbstractStateName fa_arg1) (getFAbstractStateName fa_arg2).

Definition beq_FInitialState (fi_arg1 : FInitialState) (fi_arg2 : FInitialState) : bool :=
  beq_string (getFInitialStateName fi_arg1) (getFInitialStateName fi_arg2).

Definition beq_FRegularState (fr_arg1 : FRegularState) (fr_arg2 : FRegularState) : bool :=
  beq_string (getFRegularStateName fr_arg1) (getFRegularStateName fr_arg2).


(* Meta-types *)
Inductive FSMMetamodel_EClass : Set :=
  | FStateMachineEClass
  | FTransitionEClass
  | FAbstractStateEClass
  | FInitialStateEClass
  | FRegularStateEClass
.

Definition FSMMetamodel_getTypeByEClass (fsec_arg : FSMMetamodel_EClass) : Set :=
  match fsec_arg with
    | FStateMachineEClass => FStateMachine
    | FTransitionEClass => FTransition
    | FAbstractStateEClass => FAbstractState
    | FInitialStateEClass => FInitialState
    | FRegularStateEClass => FRegularState
  end.

(**? confusing name convention **)
Definition FSMMetamodel_getEAttributeTypesByEClass (fsec_arg : FSMMetamodel_EClass) : Set :=
  match fsec_arg with
    | FStateMachineEClass => (string)
    | FTransitionEClass => (string)
    | FAbstractStateEClass => (string)
    | FInitialStateEClass => (string)
    | FRegularStateEClass => (string)
  end.

Inductive FSMMetamodel_EReference : Set :=
| FStateMachineTransitionsEReference
| FStateMachineStatesEReference
| FTransitionStateMachineEReference
| FTransitionSourceEReference
| FTransitionTargetEReference
| FAbstractStateStateMachineEReference
| FInitialStateStateMachineEReference
| FRegularStateStateMachineEReference
.

Definition FSMMetamodel_getTypeByEReference (fser_arg : FSMMetamodel_EReference) : Set :=
  match fser_arg with
| FStateMachineTransitionsEReference => FStateMachineTransitions
| FStateMachineStatesEReference => FStateMachineStates
| FTransitionStateMachineEReference => FTransitionStateMachine
| FTransitionSourceEReference => FTransitionSource
| FTransitionTargetEReference => FTransitionTarget
| FAbstractStateStateMachineEReference => FAbstractStateStateMachine
| FInitialStateStateMachineEReference => FInitialStateStateMachine
| FRegularStateStateMachineEReference => FRegularStateStateMachine
  end.

(**? confusing name convention **)
Definition FSMMetamodel_getERoleTypesByEReference (fser_arg : FSMMetamodel_EReference) : Set :=
  match fser_arg with
| FStateMachineTransitionsEReference => (FStateMachine * list FTransition)
| FStateMachineStatesEReference => (FStateMachine * list FAbstractState)
| FTransitionStateMachineEReference => (FTransition * FStateMachine)
| FTransitionSourceEReference => (FTransition * FAbstractState)
| FTransitionTargetEReference => (FTransition * FAbstractState)
| FAbstractStateStateMachineEReference => (FAbstractState * FStateMachine)
| FInitialStateStateMachineEReference => (FInitialState * FStateMachine)
| FRegularStateStateMachineEReference => (FRegularState * FStateMachine)
  end.

(* Generic types *)





(**? Changed Ctr name **)
Inductive FSMMetamodel_EObject : Set :=
 | Build_FSMMetamodel_EObject : 
    forall (fsec_arg: FSMMetamodel_EClass), (FSMMetamodel_getTypeByEClass fsec_arg) -> FSMMetamodel_EObject.

Inductive FSMMetamodel_ELink : Set :=
 | Build_FSMMetamodel_ELink : 
    forall (fser_arg:FSMMetamodel_EReference), (FSMMetamodel_getTypeByEReference fser_arg) -> FSMMetamodel_ELink.

(* Reflective functions *)

Lemma FSMMetamodel_eqEClass_dec : 
 forall (fsec_arg1:FSMMetamodel_EClass) (fsec_arg2:FSMMetamodel_EClass), { fsec_arg1 = fsec_arg2 } + { fsec_arg1 <> fsec_arg2 }.
Proof. repeat decide equality. Defined.

Lemma FSMMetamodel_eqEReference_dec : 
 forall (fser_arg1:FSMMetamodel_EReference) (fser_arg2:FSMMetamodel_EReference), { fser_arg1 = fser_arg2 } + { fser_arg1 <> fser_arg2 }.
Proof. repeat decide equality. Defined.

Definition FSMMetamodel_getEClass (fseo_arg : FSMMetamodel_EObject) : FSMMetamodel_EClass :=
   match fseo_arg with
  | (Build_FSMMetamodel_EObject fseo_arg _) => fseo_arg
   end.

Definition FSMMetamodel_getEReference (fsel_arg : FSMMetamodel_ELink) : FSMMetamodel_EReference :=
   match fsel_arg with
  | (Build_FSMMetamodel_ELink fsel_arg _) => fsel_arg
   end.

Definition FSMMetamodel_instanceOfEClass (fsec_arg: FSMMetamodel_EClass) (fseo_arg : FSMMetamodel_EObject): bool :=
  if FSMMetamodel_eqEClass_dec (FSMMetamodel_getEClass fseo_arg) fsec_arg then true else false.

Definition FSMMetamodel_instanceOfEReference (fser_arg: FSMMetamodel_EReference) (fsel_arg : FSMMetamodel_ELink): bool :=
  if FSMMetamodel_eqEReference_dec (FSMMetamodel_getEReference fsel_arg) fser_arg then true else false.

(**? confusing name convention **)

Definition FSMMetamodel_getEObjectFromEAttributeValues (fsec_arg : FSMMetamodel_EClass) : (FSMMetamodel_getEAttributeTypesByEClass fsec_arg) -> FSMMetamodel_EObject :=
  match fsec_arg with
    | FStateMachineEClass => (fun (p: (string)) => (Build_FSMMetamodel_EObject FStateMachineEClass (BuildFStateMachine p)))
    | FTransitionEClass => (fun (p: (string)) => (Build_FSMMetamodel_EObject FTransitionEClass (BuildFTransition p)))
    | FAbstractStateEClass => (fun (p: (string)) => (Build_FSMMetamodel_EObject FAbstractStateEClass (BuildFAbstractState p)))
    | FInitialStateEClass => (fun (p: (string)) => (Build_FSMMetamodel_EObject FInitialStateEClass (BuildFInitialState p)))
    | FRegularStateEClass => (fun (p: (string)) => (Build_FSMMetamodel_EObject FRegularStateEClass (BuildFRegularState p)))
  end.

(**? confusing name convention **)
Definition FSMMetamodel_getELinkFromERoleValues (fser_arg : FSMMetamodel_EReference) : (FSMMetamodel_getERoleTypesByEReference fser_arg) -> FSMMetamodel_ELink :=
  match fser_arg with
| FStateMachineTransitionsEReference => (fun (p: (FStateMachine * list FTransition)) => (Build_FSMMetamodel_ELink FStateMachineTransitionsEReference (BuildFStateMachineTransitions (fst p) (snd p))))
| FStateMachineStatesEReference => (fun (p: (FStateMachine * list FAbstractState)) => (Build_FSMMetamodel_ELink FStateMachineStatesEReference (BuildFStateMachineStates (fst p) (snd p))))
| FTransitionStateMachineEReference => (fun (p: (FTransition * FStateMachine)) => (Build_FSMMetamodel_ELink FTransitionStateMachineEReference (BuildFTransitionStateMachine (fst p) (snd p))))
| FTransitionSourceEReference => (fun (p: (FTransition * FAbstractState)) => (Build_FSMMetamodel_ELink FTransitionSourceEReference (BuildFTransitionSource (fst p) (snd p))))
| FTransitionTargetEReference => (fun (p: (FTransition * FAbstractState)) => (Build_FSMMetamodel_ELink FTransitionTargetEReference (BuildFTransitionTarget (fst p) (snd p))))
| FAbstractStateStateMachineEReference => (fun (p: (FAbstractState * FStateMachine)) => (Build_FSMMetamodel_ELink FAbstractStateStateMachineEReference (BuildFAbstractStateStateMachine (fst p) (snd p))))
| FInitialStateStateMachineEReference => (fun (p: (FInitialState * FStateMachine)) => (Build_FSMMetamodel_ELink FInitialStateStateMachineEReference (BuildFInitialStateStateMachine (fst p) (snd p))))
| FRegularStateStateMachineEReference => (fun (p: (FRegularState * FStateMachine)) => (Build_FSMMetamodel_ELink FRegularStateStateMachineEReference (BuildFRegularStateStateMachine (fst p) (snd p))))
  end.

Definition FSMMetamodel_toEClass (fsec_arg : FSMMetamodel_EClass) (fseo_arg : FSMMetamodel_EObject) : option (FSMMetamodel_getTypeByEClass fsec_arg).
Proof.
  destruct fseo_arg as [arg1 arg2].
  destruct (FSMMetamodel_eqEClass_dec arg1 fsec_arg) as [e|] eqn:dec_case.
  - rewrite e in arg2.
    exact (Some arg2).
  - exact None.
Defined.

Definition FSMMetamodel_toEReference (fser_arg : FSMMetamodel_EReference) (fsel_arg : FSMMetamodel_ELink) : option (FSMMetamodel_getTypeByEReference fser_arg).
Proof.
  destruct fsel_arg as [arg1 arg2].
  destruct (FSMMetamodel_eqEReference_dec arg1 fser_arg) as [e|] eqn:dec_case.
  - rewrite e in arg2.
  	exact (Some arg2).
  - exact None.
Defined.

(* Generic functions *)
Definition FSMMetamodel_toEObjectFromFStateMachine (fs_arg :FStateMachine) : FSMMetamodel_EObject :=
  (Build_FSMMetamodel_EObject FStateMachineEClass fs_arg).
Coercion FSMMetamodel_toEObjectFromFStateMachine : FStateMachine >-> FSMMetamodel_EObject.

Definition FSMMetamodel_toEObjectFromFTransition (ft_arg :FTransition) : FSMMetamodel_EObject :=
  (Build_FSMMetamodel_EObject FTransitionEClass ft_arg).
Coercion FSMMetamodel_toEObjectFromFTransition : FTransition >-> FSMMetamodel_EObject.

Definition FSMMetamodel_toEObjectFromFAbstractState (fa_arg :FAbstractState) : FSMMetamodel_EObject :=
  (Build_FSMMetamodel_EObject FAbstractStateEClass fa_arg).
Coercion FSMMetamodel_toEObjectFromFAbstractState : FAbstractState >-> FSMMetamodel_EObject.

Definition FSMMetamodel_toEObjectFromFInitialState (fi_arg :FInitialState) : FSMMetamodel_EObject :=
  (Build_FSMMetamodel_EObject FInitialStateEClass fi_arg).
Coercion FSMMetamodel_toEObjectFromFInitialState : FInitialState >-> FSMMetamodel_EObject.

Definition FSMMetamodel_toEObjectFromFRegularState (fr_arg :FRegularState) : FSMMetamodel_EObject :=
  (Build_FSMMetamodel_EObject FRegularStateEClass fr_arg).
Coercion FSMMetamodel_toEObjectFromFRegularState : FRegularState >-> FSMMetamodel_EObject.


(**? what are these for **)
Definition FSMMetamodel_toEObject (fseo_arg : FSMMetamodel_EObject) : FSMMetamodel_EObject := fseo_arg.
Definition FSMMetamodel_toELink (fsel_arg : FSMMetamodel_ELink) : FSMMetamodel_ELink := fsel_arg.
Definition FSMModel := Model FSMMetamodel_EObject FSMMetamodel_ELink.

Definition FSMMetamodel_toEObjectOfEClass (fsec_arg: FSMMetamodel_EClass) (t: FSMMetamodel_getTypeByEClass fsec_arg) : FSMMetamodel_EObject :=
  (Build_FSMMetamodel_EObject fsec_arg t).

Definition FSMMetamodel_toELinkOfEReference (fser_arg: FSMMetamodel_EReference) (t: FSMMetamodel_getTypeByEReference fser_arg) : FSMMetamodel_ELink :=
		  (Build_FSMMetamodel_ELink fser_arg t).
		  
Fixpoint FSMMetamodel_getFStateMachineTransitionsOnLinks (fs_arg : FStateMachine) (l : list FSMMetamodel_ELink) : option (list FTransition) :=
match l with
| (Build_FSMMetamodel_ELink FStateMachineTransitionsEReference (BuildFStateMachineTransitions FStateMachine_ctr transitions_ctr)) :: l' => 
	  if beq_FStateMachine FStateMachine_ctr fs_arg then Some transitions_ctr else FSMMetamodel_getFStateMachineTransitionsOnLinks fs_arg l'
| _ :: l' => FSMMetamodel_getFStateMachineTransitionsOnLinks fs_arg l'
| nil => None
end.

Definition getFStateMachineTransitionsOnLinks (fs_arg : FStateMachine) (m : FSMModel) : option (list FTransition) :=
  FSMMetamodel_getFStateMachineTransitionsOnLinks fs_arg (@allModelLinks _ _ m).
Fixpoint FSMMetamodel_getFStateMachineStatesOnLinks (fs_arg : FStateMachine) (l : list FSMMetamodel_ELink) : option (list FAbstractState) :=
match l with
| (Build_FSMMetamodel_ELink FStateMachineStatesEReference (BuildFStateMachineStates FStateMachine_ctr states_ctr)) :: l' => 
	  if beq_FStateMachine FStateMachine_ctr fs_arg then Some states_ctr else FSMMetamodel_getFStateMachineStatesOnLinks fs_arg l'
| _ :: l' => FSMMetamodel_getFStateMachineStatesOnLinks fs_arg l'
| nil => None
end.

Definition getFStateMachineStatesOnLinks (fs_arg : FStateMachine) (m : FSMModel) : option (list FAbstractState) :=
  FSMMetamodel_getFStateMachineStatesOnLinks fs_arg (@allModelLinks _ _ m).

Fixpoint FSMMetamodel_getFTransitionStateMachineOnLinks (ft_arg : FTransition) (l : list FSMMetamodel_ELink) : option (FStateMachine) :=
match l with
| (Build_FSMMetamodel_ELink FTransitionStateMachineEReference (BuildFTransitionStateMachine FTransition_ctr stateMachine_ctr)) :: l' => 
	  if beq_FTransition FTransition_ctr ft_arg then Some stateMachine_ctr else FSMMetamodel_getFTransitionStateMachineOnLinks ft_arg l'
| _ :: l' => FSMMetamodel_getFTransitionStateMachineOnLinks ft_arg l'
| nil => None
end.

Definition getFTransitionStateMachineOnLinks (ft_arg : FTransition) (m : FSMModel) : option (FStateMachine) :=
  FSMMetamodel_getFTransitionStateMachineOnLinks ft_arg (@allModelLinks _ _ m).
Fixpoint FSMMetamodel_getFTransitionSourceOnLinks (ft_arg : FTransition) (l : list FSMMetamodel_ELink) : option (FAbstractState) :=
match l with
| (Build_FSMMetamodel_ELink FTransitionSourceEReference (BuildFTransitionSource FTransition_ctr source_ctr)) :: l' => 
	  if beq_FTransition FTransition_ctr ft_arg then Some source_ctr else FSMMetamodel_getFTransitionSourceOnLinks ft_arg l'
| _ :: l' => FSMMetamodel_getFTransitionSourceOnLinks ft_arg l'
| nil => None
end.

Definition getFTransitionSourceOnLinks (ft_arg : FTransition) (m : FSMModel) : option (FAbstractState) :=
  FSMMetamodel_getFTransitionSourceOnLinks ft_arg (@allModelLinks _ _ m).
Fixpoint FSMMetamodel_getFTransitionTargetOnLinks (ft_arg : FTransition) (l : list FSMMetamodel_ELink) : option (FAbstractState) :=
match l with
| (Build_FSMMetamodel_ELink FTransitionTargetEReference (BuildFTransitionTarget FTransition_ctr target_ctr)) :: l' => 
	  if beq_FTransition FTransition_ctr ft_arg then Some target_ctr else FSMMetamodel_getFTransitionTargetOnLinks ft_arg l'
| _ :: l' => FSMMetamodel_getFTransitionTargetOnLinks ft_arg l'
| nil => None
end.

Definition getFTransitionTargetOnLinks (ft_arg : FTransition) (m : FSMModel) : option (FAbstractState) :=
  FSMMetamodel_getFTransitionTargetOnLinks ft_arg (@allModelLinks _ _ m).

Fixpoint FSMMetamodel_getFAbstractStateStateMachineOnLinks (fa_arg : FAbstractState) (l : list FSMMetamodel_ELink) : option (FStateMachine) :=
match l with
| (Build_FSMMetamodel_ELink FAbstractStateStateMachineEReference (BuildFAbstractStateStateMachine FAbstractState_ctr stateMachine_ctr)) :: l' => 
	  if beq_FAbstractState FAbstractState_ctr fa_arg then Some stateMachine_ctr else FSMMetamodel_getFAbstractStateStateMachineOnLinks fa_arg l'
| _ :: l' => FSMMetamodel_getFAbstractStateStateMachineOnLinks fa_arg l'
| nil => None
end.

Definition getFAbstractStateStateMachineOnLinks (fa_arg : FAbstractState) (m : FSMModel) : option (FStateMachine) :=
  FSMMetamodel_getFAbstractStateStateMachineOnLinks fa_arg (@allModelLinks _ _ m).

Fixpoint FSMMetamodel_getFInitialStateStateMachineOnLinks (fi_arg : FInitialState) (l : list FSMMetamodel_ELink) : option (FStateMachine) :=
match l with
| (Build_FSMMetamodel_ELink FInitialStateStateMachineEReference (BuildFInitialStateStateMachine FInitialState_ctr stateMachine_ctr)) :: l' => 
	  if beq_FInitialState FInitialState_ctr fi_arg then Some stateMachine_ctr else FSMMetamodel_getFInitialStateStateMachineOnLinks fi_arg l'
| _ :: l' => FSMMetamodel_getFInitialStateStateMachineOnLinks fi_arg l'
| nil => None
end.

Definition getFInitialStateStateMachineOnLinks (fi_arg : FInitialState) (m : FSMModel) : option (FStateMachine) :=
  FSMMetamodel_getFInitialStateStateMachineOnLinks fi_arg (@allModelLinks _ _ m).

Fixpoint FSMMetamodel_getFRegularStateStateMachineOnLinks (fr_arg : FRegularState) (l : list FSMMetamodel_ELink) : option (FStateMachine) :=
match l with
| (Build_FSMMetamodel_ELink FRegularStateStateMachineEReference (BuildFRegularStateStateMachine FRegularState_ctr stateMachine_ctr)) :: l' => 
	  if beq_FRegularState FRegularState_ctr fr_arg then Some stateMachine_ctr else FSMMetamodel_getFRegularStateStateMachineOnLinks fr_arg l'
| _ :: l' => FSMMetamodel_getFRegularStateStateMachineOnLinks fr_arg l'
| nil => None
end.

Definition getFRegularStateStateMachineOnLinks (fr_arg : FRegularState) (m : FSMModel) : option (FStateMachine) :=
  FSMMetamodel_getFRegularStateStateMachineOnLinks fr_arg (@allModelLinks _ _ m).


Definition FSMMetamodel_defaultInstanceOfEClass (fsec_arg: FSMMetamodel_EClass) : (FSMMetamodel_getTypeByEClass fsec_arg) :=
  match fsec_arg with
  | FStateMachineEClass => (BuildFStateMachine "")
  | FTransitionEClass => (BuildFTransition "")
  | FAbstractStateEClass => (BuildFAbstractState "")
  | FInitialStateEClass => (BuildFInitialState "")
  | FRegularStateEClass => (BuildFRegularState "")
  end.

(* Typeclass Instance *)
Instance FSMMetamodel : Metamodel FSMMetamodel_EObject FSMMetamodel_ELink FSMMetamodel_EClass FSMMetamodel_EReference :=
  {
    denoteModelClass := FSMMetamodel_getTypeByEClass;
    denoteModelReference := FSMMetamodel_getTypeByEReference;
    toModelClass := FSMMetamodel_toEClass;
    toModelReference := FSMMetamodel_toEReference;
    toModelElement := FSMMetamodel_toEObjectOfEClass;
    toModelLink := FSMMetamodel_toELinkOfEReference;
    bottomModelClass := FSMMetamodel_defaultInstanceOfEClass;

    (* Theorems *)
    eqModelClass_dec := FSMMetamodel_eqEClass_dec;
    eqModelReference_dec := FSMMetamodel_eqEReference_dec;

    (* Constructors *)
    BuildModelElement := Build_FSMMetamodel_EObject;
    BuildModelLink := Build_FSMMetamodel_ELink;
  }.
  
(* Useful lemmas *)
Lemma FSM_invert : 
  forall (fsec_arg: FSMMetamodel_EClass) (t1 t2: FSMMetamodel_getTypeByEClass fsec_arg), Build_FSMMetamodel_EObject fsec_arg t1 = Build_FSMMetamodel_EObject fsec_arg t2 -> t1 = t2.
Proof.
  intros.
  inversion H.
  apply inj_pair2_eq_dec in H1.
  exact H1.
  apply FSMMetamodel_eqEClass_dec.
Qed.
