
Class2RelationalConcrete = 
fun (Class2Relational : Phase ClassMetamodel RelationalMetamodel) (m : ClassModel) =>
(""%string,
BuildSingleElementRule ClassMetamodel ClassEClass
  (fun c : Metamodel.denoteModelClass ClassEClass =>
   (true,
   BuildOutputPatternElement TableEClass "tab" (BuildTable newId (getClassName c))
     (fun t : Metamodel.denoteModelClass TableEClass =>
      BuildOutputPatternElementReference RelationalMetamodel TableColumnsEReference
        (attrs <- getClassAttributes c m;
         cols <- resolveAll Class2Relational m "col" ColumnEClass (map (fun a : Attribute => [[a]]) attrs);
         return BuildTableColumns t cols) :: nil) :: nil)))
:: (""%string,
   BuildSingleElementRule ClassMetamodel AttributeEClass
     (fun a : Metamodel.denoteModelClass AttributeEClass =>
      (negb (getAttributeMultiValued a),
      BuildOutputPatternElement ColumnEClass "col" (BuildColumn newId (getAttributeName a))
        (fun c : Metamodel.denoteModelClass ColumnEClass =>
         BuildOutputPatternElementReference RelationalMetamodel ColumnReferenceEReference
           (cl <- getAttributeType a m;
            tb <- resolve Class2Relational m "tab" TableEClass [[cl]]; return BuildColumnReference c tb) :: nil) :: nil)))
   :: nil
     : Phase ClassMetamodel RelationalMetamodel ->
       ClassModel -> list (string * Rule ClassMetamodel RelationalMetamodel)
