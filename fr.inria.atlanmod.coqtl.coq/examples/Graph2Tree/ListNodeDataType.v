
(********************************************************************
	@name Coq declarations for metamodel: <Graph>
	@date 2018/10/02 10:13:07
	@description Automatically generated by Ecore2Coq transformation.
 ********************************************************************)

(* Coq libraries *)
Require Import Bool.
Require Import String.
Require Import List.
Require Import Multiset.
Require Import ListSet.
Require Import Omega.
Require Import Coq.Logic.Eqdep_dec.

(* CoqTL libraries *)
Require Import core.utils.tTop.
Require Import core.Metamodel.
Require Import core.Model.
Require Import core.EqDec.
Require Import core.utils.CpdtTactics.

Require Import examples.Graph2Tree.GraphMetamodel.




Lemma ListNode_eqDec : 
 forall (grec_arg1 grec_arg2:list Node), { grec_arg1 = grec_arg2 } + { grec_arg1 <> grec_arg2 }.
  Proof. 
  intros; destruct (list_eq_dec GraphMetamodel_Node_dec grec_arg1 grec_arg2); crush.
  Defined.

(* Typeclass Instance *)
Instance ListNodeDataType : EqDec (list Node) :=
  { eqDec := ListNode_eqDec;}.

